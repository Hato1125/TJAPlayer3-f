name: build

on: 
  push:
    branches: 
      - master
    tags:
      - "Ver.*"

jobs:
  get_rev_list_count:
    name: Get rev-list_count
    runs-on: ubuntu-latest
    outputs:
      rev_list_count: ${{ steps.rev.outputs.REV_LIST_COUNT }}
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: Set REV_LIST_COUNT
      id: rev
      run: |
        cd ${{ github.workspace }}
        REVCOUNT=`git rev-list --count HEAD`
        echo "REV_LIST_COUNT=${REVCOUNT}" >> $GITHUB_OUTPUT
     

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: [get_rev_list_count]
    strategy:
      matrix:
        platform: [win-x86, win-x64, linux-x64, linux-arm64, osx-x64]
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '7.0.x'
    - name: Build
      run: dotnet publish TJAPlayer3-f -o publish -r ${{matrix.platform}} -p:MyOption=PUBLISH -p:PublishSingleFile=true --configuration Release --self-contained true

    - name: Remove Folder
      run: |
        cd ${{ github.workspace }}/publish/Libs
        for filename in *
        do
          if [ ${filename} != ${{matrix.platform}} ] ; then
            rm -rf ${filename}
            echo ${filename}
          fi
        done
        
    - name: Rename App File (linux)
      if: startsWith(matrix.platform, 'linux')
      run: |
        cd ${{ github.workspace }}
        mv "publish/TJAPlayer3-f" "publish/TJAPlayer3-f.AppImage"
    
    #Pre
    - name: Create Archive(Pre)
      if: (startsWith(github.ref, 'refs/tags/Ver')) != true
      run: |
        cd ${{ github.workspace }}
        zip "TJAPlayer3-f-PreRelease-${{matrix.platform}}-${{ needs.get_rev_list_count.outputs.rev_list_count }}" -r publish

    - name: Upload Artifact(Pre)
      if: (startsWith(github.ref, 'refs/tags/Ver')) != true
      uses: actions/upload-artifact@v3
      with:
        name: TJAPlayer3-f
        path: ${{ github.workspace }}/TJAPlayer3-f-PreRelease-${{matrix.platform}}-${{ needs.get_rev_list_count.outputs.rev_list_count }}.zip

    #Release
    - name: Create Archive
      if: (startsWith(github.ref, 'refs/tags/Ver'))
      run: |
        cd ${{ github.workspace }}
        zip "TJAPlayer3-f-${{matrix.platform}}" -r publish

    - name: Upload Artifact
      if: (startsWith(github.ref, 'refs/tags/Ver'))
      uses: actions/upload-artifact@v3
      with:
        name: TJAPlayer3-f
        path: ${{ github.workspace }}/TJAPlayer3-f-${{matrix.platform}}.zip


  create_release:
    name: Create release
    runs-on: ubuntu-latest
    needs: [get_rev_list_count, build]
    steps:
    
    - name: Checkout repository
      uses: actions/checkout@v3
    
    - name: Download Artifacts
      uses: actions/download-artifact@v3
      with:
        name: TJAPlayer3-f
        path: artifacts

    # https://gist.github.com/superbrothers/af84a2f8af394a62352e06537a640746
    - name: Create a Release(Pre)
      if: (startsWith(github.ref, 'refs/tags/Ver')) != true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        cd ${{ github.workspace }}/artifacts
        RELEASE_NAME=TJAPlayer3-f-prerelease-${{ needs.get_rev_list_count.outputs.rev_list_count }}
        TAG_NAME=prerelease-${{ needs.get_rev_list_count.outputs.rev_list_count }}
        assets=()
        for asset in ${{ github.workspace }}/artifacts/*.zip; do
          assets+=("-a" "$asset")
        done
        hub release create "${assets[@]}" -p -m "$RELEASE_NAME" "$TAG_NAME"

    - name: Create a Release
      if: (startsWith(github.ref, 'refs/tags/Ver'))
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        cd ${{ github.workspace }}/artifacts
        VERSION=$(echo ${{ github.ref }} | sed -e "s#refs/tags/##g")
        RELEASE_NAME=${VERSION}
        TAG_NAME=${VERSION}
        assets=()
        for asset in ${{ github.workspace }}/artifacts/*.zip; do
          assets+=("-a" "$asset")
        done
        hub release create "${assets[@]}" -m "$RELEASE_NAME" "$TAG_NAME"

